#pragma version 10

smart_contracts.moting_app.contract.MotingApp.approval_program:
    txn ApplicationID
    bnz main_entrypoint@2
    callsub __init__

main_entrypoint@2:
    callsub __puya_arc4_router__
    return


// smart_contracts.moting_app.contract.MotingApp.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@6
    method "make_move(uint64,string)void"
    method "hello(string)string"
    txna ApplicationArgs 0
    match __puya_arc4_router___make_move_route@2 __puya_arc4_router___hello_route@3
    int 0
    retsub

__puya_arc4_router___make_move_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub make_move
    int 1
    retsub

__puya_arc4_router___hello_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    extract 2 0
    callsub hello
    dup
    len
    itob
    extract 6 2
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@6:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@10
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@10:
    int 0
    retsub


// smart_contracts.moting_app.contract.MotingApp.make_move(move: bytes, color: bytes) -> void:
make_move:
    proto 2 0
    frame_dig -2
    byte 0x00000000000002a4
    b<
    assert // Invalid move
    int 0
    byte "ocuppied_cells"
    app_global_get_ex
    assert // check self.ocuppied_cells exists
    int 1
    +
    int 676
    <
    assert // Board is full
    frame_dig -2
    box_get
    bury 1
    !
    assert
    txn Sender
    byte 0x0022
    concat
    frame_dig -1
    concat
    frame_dig -2
    swap
    box_put
    int 0
    byte "ocuppied_cells"
    app_global_get_ex
    assert // check self.ocuppied_cells exists
    int 1
    +
    byte "ocuppied_cells"
    swap
    app_global_put
    retsub


// smart_contracts.moting_app.contract.MotingApp.hello(name: bytes) -> bytes:
hello:
    proto 1 1
    byte "Hello, "
    frame_dig -1
    concat
    retsub


// smart_contracts.moting_app.contract.MotingApp.__init__() -> void:
__init__:
    proto 0 0
    byte "ocuppied_cells"
    int 0
    app_global_put
    retsub
